#!/bin/bash

echo "************* DEPLOY service *****************"

# get parameters
if ([ $# -lt 3 ]) || ([ $# -eq 1 ] && [ "$1" == "-h" -o "$1" == "--help" ]); then
  echo "deploy <profile> <k8s-context> <root directory>"
  echo " profile: 대상서버 프로파일명:ex)dev,prod"
  echo " k8s-context: 사용할 k8s context명. kubectl config view로 context 목록 확인. '.'은 현재 컨텍스트 의미함 "
  echo " root directory: project의 최상위 디렉토리. '.'은 현재 디렉토리 의미함. "
  echo " ex) ./deploy prod kubernetes-admin@kubernetes ~/work"
  echo " ex) ./deploy prod . ."
  exit 2
fi

profile=$1
context=$2
basedir=$3

if [ "${context}" == "." ]; then
	context=`kubectl config current-context`
fi
 
# set variables from config.properties: converted from '.' to '_'
eval $(${basedir}/cicd/setenv ${basedir}/src/main/resources/config/application-common.properties)
eval $(${basedir}/cicd/setenv ${basedir}/src/main/resources/config/application-${profile}.properties)

# switch kubenetes context
kubectl config use-context ${context}

# check current version
CURTAG=$(kubectl get deploy ${image_repository} -o yaml | grep "image: ${image_registry}/${image_project}/${image_repository}:" | cut -d ':' -f3)
echo "FIND CURRENT VERSION: ${CURTAG}"

# 동일한 서비스의 동일한 버전이 있으면 변경내용 반영위해 기존 deployment 삭제
if [ $? -eq 0 ] && [ "${CURTAG}" == "${image_tag}" ]; then
    echo "[${image_repository}] Same version(${image_tag}) service exists!"

    kubectl delete deploy --selector="app=${image_repository}"
fi

# deploy.yaml을 이용하여 배포 yaml생성
IMG="${image_registry}\/${image_project}\/${image_repository}:${image_tag}"
sed "s@{{ SERVICE_NAME }}@${image_repository}@g" ${basedir}/cicd/deploy.yaml | \
sed "s@{{ IMAGE_NAME }}@${IMG}@g" - | \
sed "s@{{ SERVICE_TARGET_PORT_ENV }}@${service_target_port_env}@g" - | \
sed "s@{{ SERVICE_TARGET_PORT }}@${service_target_port}@g" - | \
sed "s@{{ SERVICE_PORT }}@${service_port}@g" - | \
sed "s@{{ SERVICE_REPLICAS }}@${service_replicas}@g" - | \
sed "s@{{ EUREKA_SERVERS }}@${eureka_servers}@g" - | \
sed "s@{{ SERVICE_HOST }}@${service_host}@g" - > ${basedir}/cicd/deploy-converted.yaml

if [ $? -eq 0 ]; then
    kubectl apply -f ${basedir}/cicd/deploy-converted.yaml
else
    echo "******** FAIL to convert deployment yaml !!! ******** "
fi
